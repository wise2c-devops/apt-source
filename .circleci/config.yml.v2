jobs:
  build-branches-amd64-base-ubuntu20:
    environment:
      CEPH_VERSION: '15.2.9'
      KUBE_VERSION: '1.22.14-00'
      DOCKER_VERSION: '5:20.10.18~3-0'
      OS18: 'xUbuntu_18.04'
      OS20: 'xUbuntu_20.04'
      K8S_VERSION: '1.22'
    machine: true
    steps:
      - checkout
      - run:
          name: Build an amd64 ubuntu20 base container image
          command: |
            sudo chmod +x ${PWD}/apt-download-without-version.sh
            docker run -t --rm -e DEBIAN_FRONTEND=noninteractive -e OS=$OS20 -e VERSION=$K8S_VERSION -v ${PWD}/debs:/root/debs -v ${PWD}/apt-download-without-version.sh:/root/apt-download-without-version.sh ubuntu:20.04 bash -c \
              'rm -f /etc/apt/apt.conf.d/docker-clean && \
               apt-get update && \
               /root/apt-download-without-version.sh "python python3-docker python-chardet python3-requests docker-compose chrony jq ipvsadm graphviz nfs-common gnupg gnupg2 ipset" && \
               mkdir /root/debs/ubuntu20 && \
               mv /tmp/debs/*.deb /root/debs/ubuntu20 && \
               apt-get update && apt-get install -y apt-transport-https curl software-properties-common apt-utils gnupg1 gnupg2 && \
               echo "deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/$OS/ /" > /etc/apt/sources.list.d/devel-kubic-libcontainers-stable.list && \
               cat /etc/apt/sources.list.d/devel-kubic-libcontainers-stable.list && \
               echo "deb http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/$VERSION/$OS/ /" > /etc/apt/sources.list.d/devel-kubic-libcontainers-stable-cri-o.list && \
               cat /etc/apt/sources.list.d/devel-kubic-libcontainers-stable-cri-o.list && \
               curl -L https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/$OS/Release.key | apt-key --keyring /etc/apt/trusted.gpg.d/libcontainers.gpg add - && \
               curl -L https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable:cri-o:$VERSION/$OS/Release.key | apt-key --keyring /etc/apt/trusted.gpg.d/libcontainers-cri-o.gpg add - && \
               apt-get update && \
               /root/apt-download-without-version.sh "cri-o cri-o-runc podman" && \
               mv /tmp/debs/*.deb /root/debs/ubuntu20 && \
               ls /root/debs/ubuntu20/'
            docker build -t wise2c/apt-source:amd64-base20 .
            docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
            docker push wise2c/apt-source:amd64-base20

  build-tags-amd64-base-ubuntu20:
    environment:
      CEPH_VERSION: '15.2.9'
      KUBE_VERSION: '1.22.14-00'
      DOCKER_VERSION: '5:20.10.18~3-0'
      OS18: 'xUbuntu_18.04'
      OS20: 'xUbuntu_20.04'
      K8S_VERSION: '1.22'
    machine: true
    steps:
      - checkout
      - run:
          name: Build an amd64 ubuntu20 base container image
          command: |
            sudo chmod +x ${PWD}/apt-download-without-version.sh
            docker run -t --rm -e DEBIAN_FRONTEND=noninteractive -e OS=$OS20 -e VERSION=$K8S_VERSION -v ${PWD}/debs:/root/debs -v ${PWD}/apt-download-without-version.sh:/root/apt-download-without-version.sh ubuntu:20.04 bash -c \
              'rm -f /etc/apt/apt.conf.d/docker-clean && \
               apt-get update && \
               /root/apt-download-without-version.sh "python python3-docker python-chardet python3-requests docker-compose chrony jq ipvsadm graphviz nfs-common gnupg gnupg2 ipset" && \
               mkdir /root/debs/ubuntu20 && \
               mv /tmp/debs/*.deb /root/debs/ubuntu20 && \
               apt-get update && apt-get install -y apt-transport-https curl software-properties-common apt-utils gnupg1 gnupg2 && \
               echo "deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/$OS/ /" > /etc/apt/sources.list.d/devel-kubic-libcontainers-stable.list && \
               cat /etc/apt/sources.list.d/devel-kubic-libcontainers-stable.list && \
               echo "deb http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/$VERSION/$OS/ /" > /etc/apt/sources.list.d/devel-kubic-libcontainers-stable-cri-o.list && \
               cat /etc/apt/sources.list.d/devel-kubic-libcontainers-stable-cri-o.list && \
               curl -L https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/$OS/Release.key | apt-key --keyring /etc/apt/trusted.gpg.d/libcontainers.gpg add - && \
               curl -L https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable:cri-o:$VERSION/$OS/Release.key | apt-key --keyring /etc/apt/trusted.gpg.d/libcontainers-cri-o.gpg add - && \
               apt-get update && \
               /root/apt-download-without-version.sh "cri-o cri-o-runc podman" && \
               mv /tmp/debs/*.deb /root/debs/ubuntu20 && \
               ls /root/debs/ubuntu20/'
            docker build -t wise2c/apt-source:amd64-base20 .
            docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
            docker push wise2c/apt-source:amd64-base20

  build-branches-amd64-base-ubuntu18:
    environment:
      CEPH_VERSION: '15.2.9'
      KUBE_VERSION: '1.22.14-00'
      DOCKER_VERSION: '5:20.10.18~3-0'
      OS18: 'xUbuntu_18.04'
      OS20: 'xUbuntu_20.04'
      K8S_VERSION: '1.22'
    machine: true
    steps:
      - checkout
      - run:
          name: Build an amd64 ubuntu18 base container image
          command: |
            sudo chmod +x ${PWD}/apt-download-without-version.sh
            docker run -t --rm -e DEBIAN_FRONTEND=noninteractive -e OS=$OS18 -e VERSION=$K8S_VERSION -v ${PWD}/debs:/root/debs -v ${PWD}/apt-download-without-version.sh:/root/apt-download-without-version.sh ubuntu:18.04 bash -c \
              'rm -f /etc/apt/apt.conf.d/docker-clean && \
               apt-get update && \
               /root/apt-download-without-version.sh "python python3-docker python-chardet python3-requests docker-compose chrony jq ipvsadm graphviz nfs-common gnupg gnupg2 ipset" && \
               mkdir /root/debs/ubuntu18 && \
               mv /tmp/debs/*.deb /root/debs/ubuntu18 && \
               apt-get update && apt-get install -y apt-transport-https curl software-properties-common apt-utils gnupg1 gnupg2 && \
               echo "deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/$OS/ /" > /etc/apt/sources.list.d/devel-kubic-libcontainers-stable.list && \
               cat /etc/apt/sources.list.d/devel-kubic-libcontainers-stable.list && \
               echo "deb http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/$VERSION/$OS/ /" > /etc/apt/sources.list.d/devel-kubic-libcontainers-stable-cri-o.list && \
               cat /etc/apt/sources.list.d/devel-kubic-libcontainers-stable-cri-o.list && \
               curl -L https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/$OS/Release.key | apt-key --keyring /etc/apt/trusted.gpg.d/libcontainers.gpg add - && \
               curl -L https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable:cri-o:$VERSION/$OS/Release.key | apt-key --keyring /etc/apt/trusted.gpg.d/libcontainers-cri-o.gpg add - && \
               apt-get update && \
               /root/apt-download-without-version.sh "cri-o cri-o-runc podman" && \
               mv /tmp/debs/*.deb /root/debs/ubuntu18 && \
               ls /root/debs/ubuntu18 && \
               cd /root/debs/ubuntu18'
            docker build -t wise2c/apt-source:amd64-base18 .
            docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
            docker push wise2c/apt-source:amd64-base18

  build-tags-amd64-base-ubuntu18:
    environment:
      CEPH_VERSION: '15.2.9'
      KUBE_VERSION: '1.22.14-00'
      DOCKER_VERSION: '5:20.10.18~3-0'
      OS18: 'xUbuntu_18.04'
      OS20: 'xUbuntu_20.04'
      K8S_VERSION: '1.22'
    machine: true
    steps:
      - checkout
      - run:
          name: Build an amd64 ubuntu18 base container image
          command: |
            sudo chmod +x ${PWD}/apt-download-without-version.sh
            docker run -t --rm -e DEBIAN_FRONTEND=noninteractive -e OS=$OS18 -e CRIMAINVERSION=$CRI_MAIN_VERSION -e CRIVERSION=$CRI_VERSION -v ${PWD}/debs:/root/debs -v ${PWD}/apt-download-without-version.sh:/root/apt-download-without-version.sh ubuntu:18.04 bash -c \
              'rm -f /etc/apt/apt.conf.d/docker-clean && \
               apt-get update && \
               /root/apt-download-without-version.sh "python python3-docker python-chardet python3-requests docker-compose chrony jq ipvsadm graphviz nfs-common gnupg gnupg2 ipset" && \
               mkdir /root/debs/ubuntu18 && \
               mv /tmp/debs/*.deb /root/debs/ubuntu18 && \
               apt-get update && apt-get install -y apt-transport-https curl software-properties-common apt-utils gnupg1 gnupg2 && \
               echo "deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/$OS/ /" > /etc/apt/sources.list.d/devel-kubic-libcontainers-stable.list && \
               cat /etc/apt/sources.list.d/devel-kubic-libcontainers-stable.list && \
               echo "deb http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/$CRIMAINVERSION/$OS/ /" > /etc/apt/sources.list.d/devel-kubic-libcontainers-stable-cri-o.list && \
               cat /etc/apt/sources.list.d/devel-kubic-libcontainers-stable-cri-o.list && \
               curl -L https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/$OS/Release.key | apt-key --keyring /etc/apt/trusted.gpg.d/libcontainers.gpg add - && \
               curl -L https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable:cri-o:/$CRIMAINVERSION/$OS/Release.key | apt-key --keyring /etc/apt/trusted.gpg.d/libcontainers-cri-o.gpg add - && \
               apt-get update && \
               /root/apt-download-without-version.sh "cri-o cri-o-runc podman" && \
               mv /tmp/debs/*.deb /root/debs/ubuntu18 && \
               ls /root/debs/ubuntu18 && \
               cd /root/debs/ubuntu18'
            docker build -t wise2c/apt-source:amd64-base18 .
            docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
            docker push wise2c/apt-source:amd64-base18

  build-branches-amd64-ceph-ubuntu20:
    environment:
      CEPH_VERSION: '15.2.9'
      KUBE_VERSION: '1.22.14-00'
      DOCKER_VERSION: '5:20.10.18~3-0'
      OS18: 'xUbuntu_18.04'
      OS20: 'xUbuntu_20.04'
      K8S_VERSION: '1.22'
    machine: true
    steps:
      - checkout
      - run:
          name: Build an amd64 ubuntu20 ceph container image
          command: |
            sudo chmod +x ${PWD}/apt-download-without-version.sh
            docker run -t --rm -e DEBIAN_FRONTEND=noninteractive -v ${PWD}/debs:/root/debs -v ${PWD}/apt-download-without-version.sh:/root/apt-download-without-version.sh ubuntu:20.04 bash -c \
              "rm -f /etc/apt/apt.conf.d/docker-clean && \
               apt-get update && \
               /root/apt-download-without-version.sh 'apt-transport-https curl software-properties-common apt-utils' && \
               mkdir /root/debs/ubuntu20 && \
               mv /tmp/debs/*.deb /root/debs/ubuntu20 && \
               apt-get install -y apt-transport-https curl software-properties-common apt-utils && \
               curl -fsSL https://download.ceph.com/keys/release.asc | apt-key add - && \
               echo deb https://download.ceph.com/debian-${CEPH_VERSION}/ focal main | tee /etc/apt/sources.list.d/ceph.list && \
               apt-get update && \
               /root/apt-download-without-version.sh 'ceph ceph-deploy ceph-mgr ceph-mds rbd-nbd rbd-mirror radosgw open-vm-tools' && \
               mv /tmp/debs/*.deb /root/debs/ubuntu20 && \
               cd /root/debs/ubuntu20"
            sudo chmod -R 755 ${PWD}/debs
            docker build -t wise2c/apt-source:amd64-ceph20 .
            docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
            docker push wise2c/apt-source:amd64-ceph20

  build-tags-amd64-ceph-ubuntu20:
    environment:
      CEPH_VERSION: '15.2.9'
      KUBE_VERSION: '1.22.14-00'
      DOCKER_VERSION: '5:20.10.18~3-0'
      OS18: 'xUbuntu_18.04'
      OS20: 'xUbuntu_20.04'
      K8S_VERSION: '1.22'
    machine: true
    steps:
      - checkout
      - run:
          name: Build an amd64 ubuntu20 ceph container image
          command: |
            sudo chmod +x ${PWD}/apt-download-without-version.sh
            docker run -t --rm -e DEBIAN_FRONTEND=noninteractive -v ${PWD}/debs:/root/debs -v ${PWD}/apt-download-without-version.sh:/root/apt-download-without-version.sh ubuntu:20.04 bash -c \
              "rm -f /etc/apt/apt.conf.d/docker-clean && \
               apt-get update && \
               /root/apt-download-without-version.sh 'apt-transport-https curl software-properties-common apt-utils' && \
               mkdir /root/debs/ubuntu20 && \
               mv /tmp/debs/*.deb /root/debs/ubuntu20 && \
               apt-get install -y apt-transport-https curl software-properties-common apt-utils && \
               curl -fsSL https://download.ceph.com/keys/release.asc | apt-key add - && \
               echo deb https://download.ceph.com/debian-${CEPH_VERSION}/ focal main | tee /etc/apt/sources.list.d/ceph.list && \
               apt-get update && \
               /root/apt-download-without-version.sh 'ceph ceph-deploy ceph-mgr ceph-mds rbd-nbd rbd-mirror radosgw open-vm-tools' && \
               mv /tmp/debs/*.deb /root/debs/ubuntu20 && \
               cd /root/debs/ubuntu20"
            sudo chmod -R 755 ${PWD}/debs
            docker build -t wise2c/apt-source:amd64-ceph20 .
            docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
            docker push wise2c/apt-source:amd64-ceph20

  build-branches-amd64-ceph-ubuntu18:
    environment:
      CEPH_VERSION: '15.2.9'
      KUBE_VERSION: '1.22.14-00'
      DOCKER_VERSION: '5:20.10.18~3-0'
      OS18: 'xUbuntu_18.04'
      OS20: 'xUbuntu_20.04'
      K8S_VERSION: '1.22'
    machine: true
    steps:
      - checkout
      - run:
          name: Build an amd64 ubuntu18 ceph container image
          command: |
            sudo chmod +x ${PWD}/apt-download-without-version.sh
            docker run -t --rm -v ${PWD}/debs:/root/debs -v ${PWD}/apt-download-without-version.sh:/root/apt-download-without-version.sh ubuntu:18.04 bash -c \
              "apt-get update && \
               /root/apt-download-without-version.sh 'apt-transport-https curl software-properties-common apt-utils' && \
               mkdir /root/debs/ubuntu18 && \
               mv /tmp/debs/*.deb /root/debs/ubuntu18 && \
               apt-get install -y apt-transport-https curl software-properties-common apt-utils && \
               curl -fsSL https://download.ceph.com/keys/release.asc | apt-key add - && \
               echo deb https://download.ceph.com/debian-${CEPH_VERSION}/ bionic main | tee /etc/apt/sources.list.d/ceph.list && \
               apt-get update && \
               /root/apt-download-without-version.sh 'ceph ceph-deploy ceph-mgr ceph-mds rbd-nbd rbd-mirror radosgw radosgw-agent open-vm-tools' && \
               mv /tmp/debs/*.deb /root/debs/ubuntu18"
            sudo chmod -R 755 ${PWD}/debs
            docker build -t wise2c/apt-source:amd64-ceph18 .
            docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
            docker push wise2c/apt-source:amd64-ceph18

  build-tags-amd64-ceph-ubuntu18:
    environment:
      CEPH_VERSION: '15.2.9'
      KUBE_VERSION: '1.22.14-00'
      DOCKER_VERSION: '5:20.10.18~3-0'
      OS18: 'xUbuntu_18.04'
      OS20: 'xUbuntu_20.04'
      K8S_VERSION: '1.22'
    machine: true
    steps:
      - checkout
      - run:
          name: Build an amd64 ubuntu18 ceph container image
          command: |
            sudo chmod +x ${PWD}/apt-download-without-version.sh
            docker run -t --rm -v ${PWD}/debs:/root/debs -v ${PWD}/apt-download-without-version.sh:/root/apt-download-without-version.sh ubuntu:18.04 bash -c \
              "apt-get update && \
               /root/apt-download-without-version.sh 'apt-transport-https curl software-properties-common apt-utils' && \
               mkdir /root/debs/ubuntu18 && \
               mv /tmp/debs/*.deb /root/debs/ubuntu18 && \
               apt-get install -y apt-transport-https curl software-properties-common apt-utils && \
               curl -fsSL https://download.ceph.com/keys/release.asc | apt-key add - && \
               echo deb https://download.ceph.com/debian-${CEPH_VERSION}/ bionic main | tee /etc/apt/sources.list.d/ceph.list && \
               apt-get update && \
               /root/apt-download-without-version.sh 'ceph ceph-deploy ceph-mgr ceph-mds rbd-nbd rbd-mirror radosgw radosgw-agent open-vm-tools' && \
               mv /tmp/debs/*.deb /root/debs/ubuntu18"
            sudo chmod -R 755 ${PWD}/debs
            docker build -t wise2c/apt-source:amd64-cph18 .
            docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
            docker push wise2c/apt-source:amd64-ceph18

workflows:
  version: 2
  build-for-branches:
    jobs:
      - build-branches-amd64-base-ubuntu20
      - build-branches-amd64-base-ubuntu18
      - build-branches-amd64-ceph-ubuntu20
      - build-branches-amd64-ceph-ubuntu18
#      - build-branches-amd64-k8s-docker:
#          requires:
#            - build-branches-amd64-base-ubuntu20
#            - build-branches-amd64-base-ubuntu18
#            - build-branches-amd64-ceph-ubuntu20
#            - build-branches-amd64-ceph-ubuntu18
  build-for-tags:
    jobs:
      - build-tags-amd64-base-ubuntu20:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - build-tags-amd64-base-ubuntu18:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - build-tags-amd64-ceph-ubuntu20:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - build-tags-amd64-ceph-ubuntu20:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
#      - build-tags-amd64-k8s-docker:
#          requires:
#            - build-branches-amd64-base-ubuntu20
#            - build-branches-amd64-base-ubuntu18
#            - build-branches-amd64-ceph-ubuntu20
#            - build-branches-amd64-ceph-ubuntu18
#          filters:
#            tags:
#              only: /^v.*/
#            branches:
#              ignore: /.*/

